services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    working_dir: "/readers-lounge"
    volumes:
      - ./go.mod:/readers-lounge/go.mod
      - ./go.sum:/readers-lounge/go.sum
      - ./backend:/readers-lounge/backend
    ports:
      - "8080:8080"
    environment:
      - PGHOST=db
      - PGDATABASE=readers_lounge_db
      - PGUSER=root
      - PGPASSWORD=p@ssword
      - PGSSLMODE=disable
  db:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=p@ssword
      - POSTGRES_DB=readers_lounge_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./db/data/postgresql:/var/lib/postgresql/data
      - ./db/data/logs:/var/log
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d readers_lounge_db"]
      interval: 5s
      timeout: 30s
      retries: 5
  migration:
    build:
      context: ./db
    working_dir: /migration
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER:-postgres}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING:-host=db user=root dbname=readers_lounge_db password=p@ssword}
    volumes:
      - ./db/migration:/migration
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend
      target: dev
    working_dir: "/readers-lounge/frontend"
    volumes:
      - ./frontend:/readers-lounge/frontend
    ports:
      - "5173:5173"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
